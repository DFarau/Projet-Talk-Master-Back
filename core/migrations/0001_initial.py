# Generated by Django 5.2.1 on 2025-05-13 14:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="Nom")),
            ],
            options={
                "verbose_name": "Salle",
                "verbose_name_plural": "Salles",
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("start", models.DateTimeField(verbose_name="Début")),
                ("end", models.DateTimeField(verbose_name="Fin")),
            ],
            options={
                "verbose_name": "Créneau horaire",
                "verbose_name_plural": "Créneaux horaires",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("end__gt", models.F("start"))),
                        name="check_end_greater_than_start",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Talk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Titre")),
                ("description", models.TextField(verbose_name="Description")),
                ("duration", models.IntegerField(verbose_name="Durée (en minutes)")),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("beginner", "Débutant"),
                            ("intermediate", "Intermédiaire"),
                            ("advanced", "Avancé"),
                        ],
                        max_length=12,
                        verbose_name="Niveau",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("accepted", "Accepté"),
                            ("rejected", "Refusé"),
                            ("scheduled", "Planifié"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date de création"),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="talks",
                        to="core.room",
                        verbose_name="Salle",
                    ),
                ),
                (
                    "speaker",
                    models.ForeignKey(
                        limit_choices_to={"role": "speaker"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="talks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Conférencier",
                    ),
                ),
                (
                    "timeslot",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="talks",
                        to="core.timeslot",
                        verbose_name="Créneau horaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Présentation",
                "verbose_name_plural": "Présentations",
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
                (
                    "talk",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="core.talk",
                        verbose_name="Présentation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Favori",
                "verbose_name_plural": "Favoris",
                "unique_together": {("user", "talk")},
            },
        ),
        migrations.AddConstraint(
            model_name="talk",
            constraint=models.UniqueConstraint(
                condition=models.Q(("room__isnull", False), ("timeslot__isnull", False)),
                fields=("room", "timeslot"),
                name="unique_room_timeslot",
            ),
        ),
    ]
